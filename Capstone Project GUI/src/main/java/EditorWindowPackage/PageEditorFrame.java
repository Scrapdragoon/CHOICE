/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package EditorWindowPackage;

import DataItems.Node;
import InnerWorkings.ApplicationHandler;
import InnerWorkings.NodeRectangle;
import java.io.File;
import java.util.ArrayList;

/**
 *
 * @author Victor Malone (vm19171)
 */
public class PageEditorFrame extends javax.swing.JFrame {

    /**
     * Creates new form PageEditorTest
     */
    public PageEditorFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        pageEditorPanel = new EditorWindowPackage.PageEditorPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Page Editor");
        setMinimumSize(new java.awt.Dimension(650, 500));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jScrollPane1.setHorizontalScrollBar(null);
        jScrollPane1.setViewportView(pageEditorPanel);
        // change speed of scroll bar
        jScrollPane1.getVerticalScrollBar().setUnitIncrement(15);
        jScrollPane1.setViewportView(pageEditorPanel);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 880, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if (controller != null)
        {
           controller.enableFrame(true);
        }
        else System.exit(0);
    }//GEN-LAST:event_formWindowClosing

    
       public void setWindowData(NodeRectangle n, ApplicationHandler a)
    {
        this.controller = a; // in order to pass data back to the handler
                        
        // add data to panel's PageEditorData object
        pageEditorPanel.getPageEditorData().setTitle(n.getNode().getTitle());
        pageEditorPanel.getPageEditorData().setParagraph(n.getNode().getParagraph());
        pageEditorPanel.getPageEditorData().setID(n.getNode().getID());
               
        // display data in panel
        pageEditorPanel.getTitleField().setText(n.getNode().getTitle());
        pageEditorPanel.getParagraphField().setText(n.getNode().getParagraph());
        pageEditorPanel.getIDField().setText(n.getNode().getID());
        
        // image data
        pageEditorPanel.setImagePath(n.getNode().getImagePath());    // set image path variable
        // if null or image no longer exists, just set visual to "No Image Selected." if not, show file name
        if (n.getNode().getImagePath() != null && new File(n.getNode().getImagePath()).isFile())
        {
            pageEditorPanel.getImageNameLabel().setText(new File(n.getNode().getImagePath()).getName());
            pageEditorPanel.getRemoveImageButton().setEnabled(true);
        }
        else
        {
            pageEditorPanel.getImageNameLabel().setText("No Image Selected");
            pageEditorPanel.getRemoveImageButton().setEnabled(false);
        }
        
        
        // FOR LINK PANELS: 
        pageEditorPanel.removeAllLinkPanels();  // clear all link panels
        
         // gets list of all IDs in the project, creates array for use by combo box models.
        ArrayList<String> IDsArrayList = a.getAllIDs();
        String[] IDsArray = IDsArrayList.toArray(new String[0]);    // convert ArrayList to String[]
        
        pageEditorPanel.addChoices(n, IDsArray);
    }
    
       
       
       public void sendNewNodeToAppHandler(Node n, String originalID)
       {
           // If the proper image no longer exists at where it's set to, just set the imagePath to null.
           if (!(new File(n.getImagePath()).isFile()))
           {
               n.setImagePath(null);
               System.out.println("Image no longer exists at specified location. Setting this node's imagePath to null...");
           }
           
           // if ID is not updated, then just save
           if (n.getID().equals(originalID))
           {
               controller.saveNode(n);
               controller.enableFrame(true);
               this.dispose();
           }
           else 
           {
               // have controller delete nodes with original ID
               // update all links in other nodes that contain original ID
               // replace with new node, with new ID
               
               controller.removeAndSaveNode(n, originalID);
               controller.enableFrame(true);
               this.dispose();
               
           }
       }
       
       // for when "Cancel" button is pressed.
       public void cancel()
       {
           if (controller != null)
           {
                controller.enableFrame(true);
                System.out.println("Node has not been changed.");
                this.dispose();
           }
           else System.exit(0);
       }
       
       
    
    /**
     * @param args the command line arguments
     */
       
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        }
        catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PageEditorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PageEditorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PageEditorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PageEditorFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PageEditorFrame().setVisible(true);
            }
        });
    }

    private ApplicationHandler controller;
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private EditorWindowPackage.PageEditorPanel pageEditorPanel;
    // End of variables declaration//GEN-END:variables
}
